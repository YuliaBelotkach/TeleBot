import random  # —Ä–∞–Ω–¥–æ–º–Ω—ã–µ –∞–Ω–µ–∫–¥–æ—Ç—ã
import requests  # –ø–∞—Ä—Å–µ—Ä

import telebot, time  # —É–¥–∞–ª–µ–Ω–æ –ø—Ä–æ—Å—Ç–æ import telebot
import config  # –¥–ª—è —Ñ–∞–π–ª–∞ –∫–æ–Ω—Ñ–∏–≥, —Ç–∞–º –ª–µ–∂–∏—Ç –ø–æ–∫–∞ —Ç–æ–ª—å–∫–æ —Ç–æ–∫–µ–Ω
from bs4 import BeautifulSoup as b  # –ø–∞—Ä—Å–µ—Ä
import logging  # –¥–ª—è –±–µ–∑–æ—Å—Ç–∞–Ω–æ–≤–æ—á–Ω–æ–≥–æ –±–æ—Ç–∞
from telebot import types

# ________________________–ü–ê–†–°–ò–ù–ì –¢–£–¢____________________________________________________
URL = 'https://www.anekdot.ru/last/good'
def parser(url):
    r = requests.get(url)
    soup = b(r.text, 'html.parser')
    anekdots = soup.find_all('div', class_='text')
    return [c.text for c in anekdots]
list_of_jokes = parser(URL)
random.shuffle(list_of_jokes)
bot = telebot.TeleBot(config.TOKEN)

# ________________________–¢–ï–õ–û –ë–û–¢–ê________________________________________________________
@bot.message_handler(commands=['start'])
def welcome(message):
    photo = open('static/welcome.webp', 'rb') # –∞–¥—Ä–µ—Å –≥–¥–µ –ª–µ–∂–∏—Ç –∫–∞—Ä—Ç–∏–Ω–∫–∞
    bot.send_sticker(message.chat.id, photo) # –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ–¥–Ω—É –∏ —Ç—É –∂–µ –∫–∞—Ä—Ç–∏–Ω–∫—É
    keyboard = telebot.types.ReplyKeyboardMarkup(True)
    keyboard.row('üíû–ö–∞—Ç–∞–ª–æ–≥üíû', '–ò–Ω—Ñ–æ', '–¢–≤–æ—è —Å–∫–∏–¥–∫–∞')
    bot.send_message(message.chat.id, '–ü—Ä–∏–≤–µ—Ç, {first}. –í–≤–µ–¥–∏ —Ü–∏—Ñ—Ä—É –∏–ª–∏ –Ω–∞–ø–∏—à–∏ –ø—Ä–∏–≤–µ—Ç –∏–ª–∏ –ø–æ–∫–∞'.format(first=message.from_user.first_name), reply_markup=keyboard)

     # —Ç—É—Ç –Ω–∞—à–∏ –∫–Ω–æ–ø–æ—á–∫–∏ –Ω–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–µ, –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å —á—Ç–æ —É–≥–æ–¥–Ω–æ
    # bot.send_message(message.chat.id, '–ü—Ä–∏–≤–µ—Ç, —á–µ–ª–æ–≤–µ–∫! –í–≤–µ–¥–∏ —Ü–∏—Ñ—Ä—É –∏–ª–∏ –Ω–∞–ø–∏—à–∏ –ø—Ä–∏–≤–µ—Ç –∏–ª–∏ –ø–æ–∫–∞', reply_markup=keyboard)



@bot.message_handler(content_types=['text'])
def jokes(message):
    if message.text.lower() in '123456789':
        bot.send_message(message.chat.id, list_of_jokes[0])
        del list_of_jokes[0]
    elif message.text.lower() == '–ø—Ä–∏–≤–µ—Ç':
        bot.send_message(message.chat.id, '–ï—â—ë —Ä–∞–∑ –ø—Ä–∏–≤–µ—Ç!')
    elif message.text.lower() == '–ø–æ–∫–∞':
        bot.send_message(message.chat.id, '–ü–æ–∫–∞!')
    elif message.text.lower() == 'üíû–∫–∞—Ç–∞–ª–æ–≥üíû':

        markup = types.InlineKeyboardMarkup(row_width=2)
        item1 = types.InlineKeyboardMarkup("–°—É–º–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∞ –ê4", callback_data='–°—É–º–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∞ –ê4')
        item2 = types.InlineKeyboardMarkup("–°—É–º–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∞ –∫–Ω–∏–≥–∏", callback_data='–°—É–º–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∞ –∫–Ω–∏–≥–∏')

        markup.add(item1, item2)

        bot.send_message(message.chat.id, '–°–º–æ—Ç—Ä–∏—Ç–µ', reply_markup=markup)
    elif message.text.lower() == '–∏–Ω—Ñ–æ':
        bot.send_message(message.chat.id, '—Ç–∏–ø–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è!')
    elif message.text.lower() == '—Ç–≤–æ—è —Å–∫–∏–¥–∫–∞':
        bot.send_message(message.chat.id, '—Ç–∏–ø–∞ —Ç–≤–æ—è —Å–∫–∏–¥–∫–∞!')
    else:
        bot.send_message(message.chat.id, '–í–≤–µ–¥–∏ —Ü–∏—Ñ—Ä—É –∏–ª–∏ –Ω–∞–ø–∏—à–∏ –ü—Ä–∏–≤–µ—Ç –∏–ª–∏ –ü–æ–∫–∞')

@bot.callback_query_handler(func=lambda call: True)
def callback_inline(call):
    try:
        if call.message:
            if call.data == '–°—É–º–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∞ –ê4':
                bot.send_message(call.message.chat.id, 'https://fekla.by/product-category/sumki/')
            elif call.data == '–°—É–º–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∞ –∫–Ω–∏–≥–∏':
                bot.send_message(call.message.chat.id, 'https://fekla.by/product-category/remni-dlja-sumok/')


while True:   # –¥–ª—è –±–µ–∑–æ—Å—Ç–∞–Ω–æ–≤–æ—á–Ω–æ–π –æ—Ç—Ä–∞–±–æ—Ç–∫–∏
    try:
        logging.info("Bot running..")
        bot.polling(none_stop=True, interval=2)

        # –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞—é, —á—Ç–æ –±–æ—Ç –º–æ–∂–µ—Ç –º–∏—Ä–Ω–æ –∑–∞–≤–µ—Ä—à–∏—Ç—å —Ä–∞–±–æ—Ç—É, –ø–æ—ç—Ç–æ–º—É
        # –¥–∞–µ–º –≤—ã–π—Ç–∏ –∏–∑ —Ü–∏–∫–ª–∞
        break
    except telebot.apihelper.ApiException as e:
        logging.error(e)
        bot.stop_polling()

        time.sleep(15)

        logging.info("Running again!")